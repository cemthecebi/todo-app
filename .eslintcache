[{"/Users/cemberke.cebi/personal-projects/todo-app/src/reportWebVitals.js":"1","/Users/cemberke.cebi/personal-projects/todo-app/src/App.js":"2","/Users/cemberke.cebi/personal-projects/todo-app/src/index.js":"3","/Users/cemberke.cebi/personal-projects/todo-app/src/Todo.js":"4","/Users/cemberke.cebi/personal-projects/todo-app/src/firebase.js":"5"},{"size":362,"mtime":1606132576753,"results":"6","hashOfConfig":"7"},{"size":1530,"mtime":1606399216630,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1606132576752,"results":"9","hashOfConfig":"7"},{"size":2735,"mtime":1606399128890,"results":"10","hashOfConfig":"7"},{"size":597,"mtime":1606313511148,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xuql45",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cemberke.cebi/personal-projects/todo-app/src/reportWebVitals.js",[],"/Users/cemberke.cebi/personal-projects/todo-app/src/App.js",[],"/Users/cemberke.cebi/personal-projects/todo-app/src/index.js",[],"/Users/cemberke.cebi/personal-projects/todo-app/src/Todo.js",["23","24"],"import React, { useState } from \"react\";\nimport \"./Todo.css\";\nimport {\n  Button,\n  IconButton,\n  Input,\n  List,\n  ListItem,\n  ListItemText,\n  Modal,\n} from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport db from \"./firebase\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction Todo(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updateTodo = () => {\n    db.collection(\"todos\").doc(props.todo.id).set(\n      {\n        todo: input,\n      },\n      { merge: true }\n    );\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <div className={classes.paper}>\n          <h1>Update Your Todo</h1>\n          <Input\n            placeholder={props.todo.todo}\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            onClick={() => updateTodo()}\n          >\n            {\" \"}\n            Update\n          </Button>\n        </div>\n      </Modal>\n\n      <Grid\n        container\n        spacing={3}\n        justify=\"center\"\n        style={{ paddingTop: \"20px\" }}\n      >\n        <List className=\"todo_list\">\n          <ListItem>\n            <ListItemText\n              primary={props.todo.todo}\n              secondary=\"Dummy Deadline 🕰️\"\n            />\n          </ListItem>{\" \"}\n        </List>\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n            size=\"medium\"\n            onClick={(e) => setOpen(true)}\n          >\n            {\" \"}\n            Edit\n          </Button>\n          <IconButton aria-label=\"delete\" className={classes.margin}>\n            <DeleteIcon\n              fontSize=\"large\"\n              onClick={() => db.collection(\"todos\").doc(props.todo.id).delete()}\n            />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Todo;\n","/Users/cemberke.cebi/personal-projects/todo-app/src/firebase.js",[],{"ruleId":"25","severity":1,"message":"26","line":12,"column":8,"nodeType":"27","messageId":"28","endLine":12,"endColumn":25},{"ruleId":"25","severity":1,"message":"29","line":34,"column":9,"nodeType":"27","messageId":"28","endLine":34,"endColumn":19},"no-unused-vars","'DeleteForeverIcon' is defined but never used.","Identifier","unusedVar","'handleOpen' is assigned a value but never used."]